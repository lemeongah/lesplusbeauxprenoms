name: Deploy WordPress Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to production via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e

            # D√©terminer le FOLDER_NAME depuis le repository name
            REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
            DEPLOY_DIR="/var/www/$REPO_NAME"

            echo "üì¶ Pr√©paration du d√©ploiement..."
            mkdir -p "$DEPLOY_DIR"
            cd "$DEPLOY_DIR"

            # V√©rifier si le repo git existe d√©j√†
            if [ -d .git ]; then
              echo "üîÑ Repository existant - mise √† jour..."
              git fetch origin main
              git reset --hard origin/main
              git clean -fd
            else
              echo "üì• Initialisation du repository..."
              git init
              git remote add origin https://github.com/${{ github.repository }}.git
              echo "üîÑ Synchronisation du code depuis GitHub..."
              git fetch origin main
              echo "‚ú® Reset au dernier commit..."
              git reset --hard origin/main
              git clean -fd
            fi

            echo "üìä √âtat du d√©ploiement..."
            echo "  Repository: ${{ github.repository }}"
            echo "  Branch: main"
            echo "  Commit: $(git rev-parse --short HEAD)"

            echo "üöÄ Red√©marrage des services Docker..."
            cd "$DEPLOY_DIR/project"

            # ‚ö†Ô∏è  IMPORTANT: Backup la base de donn√©es AVANT le red√©marrage
            echo "üíæ Cr√©ation d'une sauvegarde de s√©curit√©..."
            mkdir -p backups
            BACKUP_FILE="backups/backup_before_deploy_$(date +%Y%m%d_%H%M%S).sql.gz"

            # V√©rifier si la base de donn√©es existe
            if docker compose ps db 2>/dev/null | grep -q "Up"; then
              echo "  ‚Üí Dumping de la base de donn√©es..."
              docker compose exec -T db sh -c "exec mysqldump -u\$DB_USER -p\$DB_PASSWORD \$DB_NAME" | gzip > "$BACKUP_FILE" 2>/dev/null || echo "  ‚ö†Ô∏è  Backup √©chou√© (BDD peut √™tre vierge)"
              if [ -f "$BACKUP_FILE" ] && [ -s "$BACKUP_FILE" ]; then
                echo "  ‚úÖ Backup cr√©√©: $BACKUP_FILE"
              fi
            fi

            # Arr√™ter les services mais pr√©server les volumes (DB)
            docker compose down || true

            # Red√©marrer avec reconstruction (pr√©serve les volumes)
            docker compose up -d --build

            echo "‚úÖ D√©ploiement termin√© pour $REPO_NAME"
